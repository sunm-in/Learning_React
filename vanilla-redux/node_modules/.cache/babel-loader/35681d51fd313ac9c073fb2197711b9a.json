{"ast":null,"code":"// library\nimport { createStore } from 'redux'; // store는 date를 넣는 곳(state), 기본적으로 data를 넣을 수 있는 장소를 생성한다.\n// state -> application에서 바뀌는 data\n\nconst add = document.getElementById('add');\nconst minus = document.getElementById('minus');\nconst number = document.querySelector('span');\nnumber.innerText = 0;\nconst ADD = 'ADD';\nconst MINUS = 'MINUS'; // reducer\n// reducer는 함수고 data를 수정(modify)한다.\n\nconst countModifier = (count = 0, action) => {\n  switch (action.type) {\n    case ADD:\n      return count + 1;\n\n    case MINUS:\n      return count - 1;\n\n    default:\n      return count;\n  }\n}; // store 생성\n// store -> data를 저장하는 곳\n\n\nconst countStore = createStore(countModifier);\n\nconst onChange = () => {\n  number.innerText = countStore.getState();\n};\n\ncountStore.subscribe(onChange);\n\nconst handleAdd = () => {\n  countStore.dispatch({\n    type: ADD\n  });\n};\n\nconst handleMinus = () => {\n  countStore.dispatch({\n    type: MINUS\n  });\n};\n\nadd.addEventListener('click', handleAdd);\nminus.addEventListener('click', handleMinus); // countModifier에 action 보내는 방법\n// dispatch -> countStore.dispatch({ type: 'ADD' });","map":{"version":3,"sources":["/Users/leesunmin/react_prac/vanilla-redux/src/index.js"],"names":["createStore","add","document","getElementById","minus","number","querySelector","innerText","ADD","MINUS","countModifier","count","action","type","countStore","onChange","getState","subscribe","handleAdd","dispatch","handleMinus","addEventListener"],"mappings":"AAAA;AACA,SAASA,WAAT,QAA4B,OAA5B,C,CACA;AACA;;AAEA,MAAMC,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAZ;AACA,MAAMC,KAAK,GAAGF,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAd;AACA,MAAME,MAAM,GAAGH,QAAQ,CAACI,aAAT,CAAuB,MAAvB,CAAf;AAEAD,MAAM,CAACE,SAAP,GAAmB,CAAnB;AAEA,MAAMC,GAAG,GAAG,KAAZ;AACA,MAAMC,KAAK,GAAG,OAAd,C,CAEA;AACA;;AACA,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAG,CAAT,EAAYC,MAAZ,KAAuB;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,GAAL;AACE,aAAOG,KAAK,GAAG,CAAf;;AACF,SAAKF,KAAL;AACE,aAAOE,KAAK,GAAG,CAAf;;AACF;AACE,aAAOA,KAAP;AANJ;AAQD,CATD,C,CAWA;AACA;;;AACA,MAAMG,UAAU,GAAGd,WAAW,CAACU,aAAD,CAA9B;;AAEA,MAAMK,QAAQ,GAAG,MAAM;AACrBV,EAAAA,MAAM,CAACE,SAAP,GAAmBO,UAAU,CAACE,QAAX,EAAnB;AACD,CAFD;;AAIAF,UAAU,CAACG,SAAX,CAAqBF,QAArB;;AAEA,MAAMG,SAAS,GAAG,MAAM;AACtBJ,EAAAA,UAAU,CAACK,QAAX,CAAoB;AAAEN,IAAAA,IAAI,EAAEL;AAAR,GAApB;AACD,CAFD;;AAIA,MAAMY,WAAW,GAAG,MAAM;AACxBN,EAAAA,UAAU,CAACK,QAAX,CAAoB;AAAEN,IAAAA,IAAI,EAAEJ;AAAR,GAApB;AACD,CAFD;;AAIAR,GAAG,CAACoB,gBAAJ,CAAqB,OAArB,EAA8BH,SAA9B;AACAd,KAAK,CAACiB,gBAAN,CAAuB,OAAvB,EAAgCD,WAAhC,E,CAEA;AACA","sourcesContent":["// library\nimport { createStore } from 'redux';\n// store는 date를 넣는 곳(state), 기본적으로 data를 넣을 수 있는 장소를 생성한다.\n// state -> application에서 바뀌는 data\n\nconst add = document.getElementById('add');\nconst minus = document.getElementById('minus');\nconst number = document.querySelector('span');\n\nnumber.innerText = 0;\n\nconst ADD = 'ADD';\nconst MINUS = 'MINUS';\n\n// reducer\n// reducer는 함수고 data를 수정(modify)한다.\nconst countModifier = (count = 0, action) => {\n  switch (action.type) {\n    case ADD:\n      return count + 1;\n    case MINUS:\n      return count - 1;\n    default:\n      return count;\n  }\n};\n\n// store 생성\n// store -> data를 저장하는 곳\nconst countStore = createStore(countModifier);\n\nconst onChange = () => {\n  number.innerText = countStore.getState();\n};\n\ncountStore.subscribe(onChange);\n\nconst handleAdd = () => {\n  countStore.dispatch({ type: ADD });\n};\n\nconst handleMinus = () => {\n  countStore.dispatch({ type: MINUS });\n};\n\nadd.addEventListener('click', handleAdd);\nminus.addEventListener('click', handleMinus);\n\n// countModifier에 action 보내는 방법\n// dispatch -> countStore.dispatch({ type: 'ADD' });\n"]},"metadata":{},"sourceType":"module"}